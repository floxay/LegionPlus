name: Nightly release

on:
  schedule:
    - cron: '0 3 * * *'
  workflow_dispatch:

jobs:
  compare-commits:
    runs-on: ubuntu-latest

    outputs:
      sha7: ${{ steps.check.outputs.sha7 }}
      commit: ${{ steps.check.outputs.commit }}
      changed: ${{ steps.check.outputs.changed }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          fetch-tags: true

      - name: Compare nightly tag and main
        id: check
        run: |
          main_commit=$(git rev-parse origin/main)
          echo "commit=$main_commit" >> $GITHUB_OUTPUT
          echo "sha7=${main_commit:0:7}" >> $GITHUB_OUTPUT

          if git rev-parse refs/tags/nightly >/dev/null 2>&1; then
            nightly_commit=$(git rev-parse refs/tags/nightly)
            if [ "$nightly_commit" != "$main_commit" ]; then
              echo "changed=true" >> $GITHUB_OUTPUT
            else
              echo "changed=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

  build-and-release:
    runs-on: windows-latest
    timeout-minutes: 20

    needs: 
      - compare-commits
    if: needs.compare-commits.outputs.changed == 'true'

    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2
        with:
          msbuild-architecture: x64

      - name: Build Legion+
        run: msbuild /m . /p:Configuration=Release /p:PropertyPreprocessorDefinitions=NIGHTLY#${{ needs.compare-commits.outputs.sha7 }}

      - name: Rename executable
        run: mv "bin/x64/Release/LegionPlus.exe" "bin/x64/Release/LegionPlusNightly.exe"

      - name: Ensure nightly release exists
        run: |
          if (-not (gh release view nightly --repo ${{ github.repository }})) {
            gh release create nightly --repo ${{ github.repository }} --prerelease --title "Nightly Build" --notes "Automatic nightly build"
          }
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Upload nightly executable
        run: gh release upload nightly "bin/x64/Release/LegionPlusNightly.exe" --repo ${{ github.repository }} --clobber
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Update nightly tag
        run: |
          git tag -f nightly ${{ needs.compare-commits.outputs.commit }}
          git push origin refs/tags/nightly --force
